// Generated by CoffeeScript 2.4.1
var Ball, COLORS, active, balls, clicked, createColors, createPair, draw, level, mousePressed, overlap, reset, setup;

COLORS = null;

level = 0;

active = 0;

clicked = [];

Ball = class Ball {
  constructor(radie1, x1, y1, col1) {
    this.radie = radie1;
    this.x = x1;
    this.y = y1;
    this.col = col1;
    this.active = true;
  }

  rita() {
    if (!this.active) {
      return;
    }
    fill(this.col);
    return circle(this.x, this.y, this.radie);
  }

  inside(mx, my) {
    if (!this.active) {
      return false;
    }
    return dist(this.x, this.y, mx, my) < this.radie;
  }

};

balls = [];

reset = function(delta = 1) {
  var i, k, len, ref;
  active = 0;
  balls = [];
  clicked = [];
  level += delta;
  console.log('reset', level);
  if (level < 1) {
    level = 1;
  }
  ref = range(level);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    createPair(COLORS[i]);
  }
  return console.log(balls);
};

createColors = function() {
  var b, g, k, l, len, len1, len2, m, r, ref, ref1, ref2, result;
  result = [];
  ref = '08f';
  for (k = 0, len = ref.length; k < len; k++) {
    r = ref[k];
    ref1 = '08f';
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      g = ref1[l];
      ref2 = '08f';
      for (m = 0, len2 = ref2.length; m < len2; m++) {
        b = ref2[m];
        result.push('#' + r + g + b + '8');
      }
    }
  }
  return result;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  COLORS = createColors();
  return reset(1);
};

draw = function() {
  var ball, i, k, l, len, len1, results;
  bg(0.5);
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    ball.rita();
  }
  fc(1);
  textSize(16);
  text(`level ${level}`, 100, 25);
  text(`active ${active}`, 100, 50);
  results = [];
  for (i = l = 0, len1 = balls.length; l < len1; i = ++l) {
    ball = balls[i];
    results.push(text(JSON.stringify(ball), 100, 75 + i * 25));
  }
  return results;
};

mousePressed = function() {
  var ball, candidates;
  candidates = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = balls.length; k < len; k++) {
      ball = balls[k];
      if (ball.inside(mouseX, mouseY)) {
        results.push(ball);
      }
    }
    return results;
  })();
  if (candidates.length !== 1) {
    reset(-1);
    return;
  }
  active--;
  ball = candidates[0];
  ball.active = false;
  clicked.push(ball);
  console.log(`clicked.length ${clicked.length}`);
  if (clicked.length === 2) {
    if (active === 0) {
      reset(1);
      return;
    }
    if (clicked[0].col !== clicked[1].col) {
      reset(-1);
    }
    return clicked = [];
  }
};

overlap = function(x, y) {
  var ball, k, len;
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (dist(ball.x, ball.y, x, y) < ball.radie) {
      return true;
    }
  }
  return false;
};

createPair = function(col) {
  var j, k, len, radie, ref, results, x, y;
  radie = int(windowWidth / (3 + level));
  ref = range(2);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    active++;
    x = int(random(width));
    y = int(random(height));
    while (overlap(x, y)) {
      x = int(random(width));
      y = int(random(height));
    }
    results.push(balls.push(new Ball(radie, x, y, col)));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsWUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsTUFBQSxHQUFTOztBQUNULEtBQUEsR0FBUTs7QUFDUixNQUFBLEdBQVM7O0FBQ1QsT0FBQSxHQUFVOztBQUVKLE9BQU4sTUFBQSxLQUFBO0VBQ0MsV0FBYyxPQUFBLElBQUEsSUFBQSxNQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBTyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFDL0IsSUFBQyxDQUFBLE1BQUQsR0FBVTtFQURHOztFQUVkLElBQU8sQ0FBQSxDQUFBO0lBQ04sSUFBRyxDQUFJLElBQUMsQ0FBQSxNQUFSO0FBQW9CLGFBQXBCOztJQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsR0FBTjtXQUNBLE1BQUEsQ0FBTyxJQUFDLENBQUEsQ0FBUixFQUFVLElBQUMsQ0FBQSxDQUFYLEVBQWEsSUFBQyxDQUFBLEtBQWQ7RUFITTs7RUFJUCxNQUFTLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBQTtJQUNSLElBQUcsQ0FBSSxJQUFDLENBQUEsTUFBUjtBQUFvQixhQUFPLE1BQTNCOztXQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsQ0FBTixFQUFRLElBQUMsQ0FBQSxDQUFULEVBQVcsRUFBWCxFQUFjLEVBQWQsQ0FBQSxHQUFvQixJQUFDLENBQUE7RUFGYjs7QUFQVjs7QUFXQSxLQUFBLEdBQVE7O0FBRVIsS0FBQSxHQUFRLFFBQUEsQ0FBQyxRQUFRLENBQVQsQ0FBQTtBQUNQLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVB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VmM7O0FBa0JmLE9BQUEsR0FBVSxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtBQUNULE1BQUEsSUFBQSxFQUFBLENBQUEsRUFBQTtFQUFBLEtBQUEsdUNBQUE7O0lBQ0MsSUFBRyxJQUFBLENBQUssSUFBSSxDQUFDLENBQVYsRUFBWSxJQUFJLENBQUMsQ0FBakIsRUFBbUIsQ0FBbkIsRUFBcUIsQ0FBckIsQ0FBQSxHQUEwQixJQUFJLENBQUMsS0FBbEM7QUFBNkMsYUFBTyxLQUFwRDs7RUFERDtTQUVBO0FBSFM7O0FBS1YsVUFBQSxHQUFhLFFBQUEsQ0FBQyxHQUFELENBQUE7QUFDWixNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLEtBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLENBQUEsRUFBQTtFQUFBLEtBQUEsR0FBUSxHQUFBLENBQUksV0FBQSxHQUFZLENBQUMsQ0FBQSxHQUFFLEtBQUgsQ0FBaEI7QUFFUjtBQUFBO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxNQUFBO0lBQ0EsQ0FBQSxHQUFJLEdBQUEsQ0FBSSxNQUFBLENBQU8sS0FBUCxDQUFKO0lBQ0osQ0FBQSxHQUFJLEdBQUEsQ0FBSSxNQUFBLENBQU8sTUFBUCxDQUFKO0FBQ0osV0FBTSxPQUFBLENBQVEsQ0FBUixFQUFVLENBQVYsQ0FBTjtNQUNDLENBQUEsR0FBSSxHQUFBLENBQUksTUFBQSxDQUFPLEtBQVAsQ0FBSjtNQUNKLENBQUEsR0FBSSxHQUFBLENBQUksTUFBQSxDQUFPLE1BQVAsQ0FBSjtJQUZMO2lCQUdBLEtBQUssQ0FBQyxJQUFOLENBQVcsSUFBSSxJQUFKLENBQVMsS0FBVCxFQUFlLENBQWYsRUFBaUIsQ0FBakIsRUFBbUIsR0FBbkIsQ0FBWDtFQVBELENBQUE7O0FBSFkiLCJzb3VyY2VzQ29udGVudCI6WyJDT0xPUlMgPSBudWxsXHJcbmxldmVsID0gMFxyXG5hY3RpdmUgPSAwXHJcbmNsaWNrZWQgPSBbXVxyXG5cclxuY2xhc3MgQmFsbFxyXG5cdGNvbnN0cnVjdG9yIDogKEByYWRpZSwgQHgsIEB5LCBAY29sKSAtPlxyXG5cdFx0QGFjdGl2ZSA9IHRydWVcclxuXHRyaXRhIDogLT5cclxuXHRcdGlmIG5vdCBAYWN0aXZlIHRoZW4gcmV0dXJuIFxyXG5cdFx0ZmlsbCBAY29sXHJcblx0XHRjaXJjbGUgQHgsQHksQHJhZGllXHJcblx0aW5zaWRlIDogKG14LG15KSAtPiBcclxuXHRcdGlmIG5vdCBAYWN0aXZlIHRoZW4gcmV0dXJuIGZhbHNlXHJcblx0XHRkaXN0KEB4LEB5LG14LG15KSA8IEByYWRpZVxyXG5cclxuYmFsbHMgPSBbXVxyXG5cclxucmVzZXQgPSAoZGVsdGEgPSAxKSAtPlxyXG5cdGFjdGl2ZSA9IDAgXHJcblx0YmFsbHMgPSBbXVxyXG5cdGNsaWNrZWQgPSBbXVxyXG5cdGxldmVsICs9IGRlbHRhXHJcblx0Y29uc29sZS5sb2cgJ3Jlc2V0JyxsZXZlbFxyXG5cdGlmIGxldmVsIDwgMSB0aGVuIGxldmVsID0gMVxyXG5cdGZvciBpIGluIHJhbmdlIGxldmVsXHJcblx0XHRjcmVhdGVQYWlyIENPTE9SU1tpXVxyXG5cdGNvbnNvbGUubG9nIGJhbGxzXHJcblxyXG5jcmVhdGVDb2xvcnMgPSAtPlxyXG5cdHJlc3VsdCA9IFtdXHJcblx0Zm9yIHIgaW4gJzA4ZidcclxuXHRcdGZvciBnIGluICcwOGYnXHJcblx0XHRcdGZvciBiIGluICcwOGYnXHJcblx0XHRcdFx0cmVzdWx0LnB1c2ggJyMnK3IrZytiKyc4J1xyXG5cdHJlc3VsdFxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyB3aW5kb3dXaWR0aCx3aW5kb3dIZWlnaHRcclxuXHRDT0xPUlMgPSBjcmVhdGVDb2xvcnMoKVxyXG5cdHJlc2V0IDFcclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJnIDAuNVxyXG5cdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRiYWxsLnJpdGEoKVxyXG5cdGZjIDFcclxuXHR0ZXh0U2l6ZSAxNlxyXG5cdHRleHQgXCJsZXZlbCAje2xldmVsfVwiLCAxMDAsMjVcclxuXHR0ZXh0IFwiYWN0aXZlICN7YWN0aXZlfVwiLCAxMDAsNTBcclxuXHRmb3IgYmFsbCxpIGluIGJhbGxzXHJcblx0XHR0ZXh0IEpTT04uc3RyaW5naWZ5KGJhbGwpLDEwMCw3NStpKjI1XHJcblxyXG5tb3VzZVByZXNzZWQgPSAtPlxyXG5cdGNhbmRpZGF0ZXMgPSAoYmFsbCBmb3IgYmFsbCBpbiBiYWxscyB3aGVuIGJhbGwuaW5zaWRlIG1vdXNlWCxtb3VzZVkpXHJcblx0aWYgY2FuZGlkYXRlcy5sZW5ndGggIT0gMSBcclxuXHRcdHJlc2V0IC0xXHJcblx0XHRyZXR1cm5cclxuXHRhY3RpdmUtLVxyXG5cdGJhbGwgPSBjYW5kaWRhdGVzWzBdXHJcblx0YmFsbC5hY3RpdmUgPSBmYWxzZVxyXG5cdGNsaWNrZWQucHVzaCBiYWxsXHJcblx0Y29uc29sZS5sb2cgXCJjbGlja2VkLmxlbmd0aCAje2NsaWNrZWQubGVuZ3RofVwiXHJcblx0aWYgY2xpY2tlZC5sZW5ndGggPT0gMlxyXG5cdFx0aWYgYWN0aXZlID09IDBcclxuXHRcdFx0cmVzZXQgMVxyXG5cdFx0XHRyZXR1cm5cclxuXHRcdGlmIGNsaWNrZWRbMF0uY29sICE9IGNsaWNrZWRbMV0uY29sXHJcblx0XHRcdHJlc2V0IC0xXHJcblx0XHRjbGlja2VkID0gW11cclxuXHJcbm92ZXJsYXAgPSAoeCx5KSAtPlxyXG5cdGZvciBiYWxsIGluIGJhbGxzIFxyXG5cdFx0aWYgZGlzdChiYWxsLngsYmFsbC55LHgseSkgPCBiYWxsLnJhZGllIHRoZW4gcmV0dXJuIHRydWVcclxuXHRmYWxzZVxyXG5cdFxyXG5jcmVhdGVQYWlyID0gKGNvbCkgLT5cclxuXHRyYWRpZSA9IGludCB3aW5kb3dXaWR0aC8oMytsZXZlbClcclxuXHJcblx0Zm9yIGogaW4gcmFuZ2UgMlxyXG5cdFx0YWN0aXZlKytcclxuXHRcdHggPSBpbnQgcmFuZG9tIHdpZHRoXHJcblx0XHR5ID0gaW50IHJhbmRvbSBoZWlnaHRcclxuXHRcdHdoaWxlIG92ZXJsYXAgeCx5XHJcblx0XHRcdHggPSBpbnQgcmFuZG9tIHdpZHRoXHJcblx0XHRcdHkgPSBpbnQgcmFuZG9tIGhlaWdodFxyXG5cdFx0YmFsbHMucHVzaCBuZXcgQmFsbCByYWRpZSx4LHksY29sIl19
//# sourceURL=c:\github\ColorPairCD\coffee\sketch.coffee