// Generated by CoffeeScript 2.4.1
var Ball, COLORS, active, balls, clicked, createColors, createPair, draw, level, mousePressed, overlap, reset, setup;

COLORS = null;

level = 0;

active = 0;

clicked = [];

Ball = class Ball {
  constructor(radie1, x1, y1, col1) {
    this.radie = radie1;
    this.x = x1;
    this.y = y1;
    this.col = col1;
    this.active = true;
  }

  rita() {
    if (!this.active) {
      return;
    }
    sc(1);
    sw(4);
    fill(this.col);
    return circle(this.x, this.y, this.radie);
  }

  inside(mx, my) {
    if (!this.active) {
      return false;
    }
    return dist(this.x, this.y, mx, my) < this.radie;
  }

};

balls = [];

reset = function(delta = 1) {
  var i, k, len, ref;
  active = 0;
  balls = [];
  clicked = [];
  level += delta;
  console.log('reset', level);
  if (level < 1) {
    level = 1;
  }
  ref = range(level);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    createPair(COLORS[i]);
  }
  return console.log(balls);
};

createColors = function() {
  var b, g, k, l, len, len1, len2, m, r, result, values;
  result = [];
  //values = '0f' # 8=2*2*2
  values = '08f'; // 27=3*3*3
//values = '05af' # 64=4*4*4
  for (k = 0, len = values.length; k < len; k++) {
    r = values[k];
    for (l = 0, len1 = values.length; l < len1; l++) {
      g = values[l];
      for (m = 0, len2 = values.length; m < len2; m++) {
        b = values[m];
        result.push('#' + r + g + b); //+'8'
      }
    }
  }
  return result;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  COLORS = createColors();
  return reset(1);
};

draw = function() {
  var ball, i, k, l, len, len1, results;
  bg(0.5);
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    ball.rita();
  }
  sw(0);
  fc(1);
  textSize(16);
  text(`level ${level}`, 100, 25);
  text(`active ${active}`, 100, 50);
  results = [];
  for (i = l = 0, len1 = balls.length; l < len1; i = ++l) {
    ball = balls[i];
    results.push(text(`${ball.x} ${ball.y} ${ball.col} ${ball.active}`, 100, 75 + i * 25));
  }
  return results;
};

mousePressed = function() {
  var ball, candidates;
  candidates = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = balls.length; k < len; k++) {
      ball = balls[k];
      if (ball.inside(mouseX, mouseY)) {
        results.push(ball);
      }
    }
    return results;
  })();
  if (candidates.length !== 1) {
    reset(-1);
    return;
  }
  active--;
  ball = candidates[0];
  ball.active = false;
  clicked.push(ball);
  console.log(`clicked.length ${clicked.length}`);
  if (clicked.length === 2) {
    if (active === 0) {
      reset(1);
      return;
    }
    if (clicked[0].col !== clicked[1].col) {
      reset(-1);
    }
    return clicked = [];
  }
};

overlap = function(x, y) {
  var ball, k, len;
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (dist(ball.x, ball.y, x, y) < ball.radie) {
      return true;
    }
  }
  return false;
};

createPair = function(col) {
  var j, k, len, radie, ref, results, x, y;
  radie = int(windowWidth / (3 + level));
  ref = range(2);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    active++;
    x = int(random(width));
    y = int(random(height));
    while (overlap(x, y)) {
      x = int(random(width));
      y = int(random(height));
    }
    results.push(balls.push(new Ball(radie, x, y, col)));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsWUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsTUFBQSxHQUFTOztBQUNULEtBQUEsR0FBUTs7QUFDUixNQUFBLEdBQVM7O0FBQ1QsT0FBQSxHQUFVOztBQUVKLE9BQU4sTUFBQSxLQUFBO0VBQ0MsV0FBYyxPQUFBLElBQUEsSUFBQSxNQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBTyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFDL0IsSUFBQyxDQUFBLE1BQUQsR0FBVTtFQURHOztFQUVkLElBQU8sQ0FBQSxDQUFBO0lBQ04sSUFBRyxDQUFJLElBQUMsQ0FBQSxNQUFSO0FBQW9CLGFBQXBCOztJQUNBLEVBQUEsQ0FBRyxDQUFIO0lBQ0EsRUFBQSxDQUFHLENBQUg7SUFDQSxJQUFBLENBQUssSUFBQyxDQUFBLEdBQU47V0FDQSxNQUFBLENBQU8sSUFBQyxDQUFBLENBQVIsRUFBVSxJQUFDLENBQUEsQ0FBWCxFQUFhLElBQUMsQ0FBQSxLQUFkO0VBTE07O0VBTVAsTUFBUyxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQUE7SUFDUixJQUFHLENBQUksSUFBQyxDQUFBLE1BQVI7QUFBb0IsYUFBTyxNQUEzQjs7V0FDQSxJQUFBLENBQUssSUFBQyxDQUFBLENBQU4sRUFBUSxJQUFDLENBQUEsQ0FBVCxFQUFXLEVBQVgsRUFBYyxFQUFkLENBQUEsR0FBb0IsSUFBQyxDQUFBO0VBRmI7O0FBVFY7O0FBYUEsS0FBQSxHQUFROztBQUVSLEtBQUEsR0FBUSxRQUFBLENBQUMsUUFBUSxDQUFULENB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QixHQUFuQixDQUFYO0VBUEQsQ0FBQTs7QUFIWSIsInNvdXJjZXNDb250ZW50IjpbIkNPTE9SUyA9IG51bGxcclxubGV2ZWwgPSAwXHJcbmFjdGl2ZSA9IDBcclxuY2xpY2tlZCA9IFtdXHJcblxyXG5jbGFzcyBCYWxsXHJcblx0Y29uc3RydWN0b3IgOiAoQHJhZGllLCBAeCwgQHksIEBjb2wpIC0+XHJcblx0XHRAYWN0aXZlID0gdHJ1ZVxyXG5cdHJpdGEgOiAtPlxyXG5cdFx0aWYgbm90IEBhY3RpdmUgdGhlbiByZXR1cm4gXHJcblx0XHRzYyAxXHJcblx0XHRzdyA0XHJcblx0XHRmaWxsIEBjb2xcclxuXHRcdGNpcmNsZSBAeCxAeSxAcmFkaWVcclxuXHRpbnNpZGUgOiAobXgsbXkpIC0+IFxyXG5cdFx0aWYgbm90IEBhY3RpdmUgdGhlbiByZXR1cm4gZmFsc2VcclxuXHRcdGRpc3QoQHgsQHksbXgsbXkpIDwgQHJhZGllXHJcblxyXG5iYWxscyA9IFtdXHJcblxyXG5yZXNldCA9IChkZWx0YSA9IDEpIC0+XHJcblx0YWN0aXZlID0gMCBcclxuXHRiYWxscyA9IFtdXHJcblx0Y2xpY2tlZCA9IFtdXHJcblx0bGV2ZWwgKz0gZGVsdGFcclxuXHRjb25zb2xlLmxvZyAncmVzZXQnLGxldmVsXHJcblx0aWYgbGV2ZWwgPCAxIHRoZW4gbGV2ZWwgPSAxXHJcblx0Zm9yIGkgaW4gcmFuZ2UgbGV2ZWxcclxuXHRcdGNyZWF0ZVBhaXIgQ09MT1JTW2ldXHJcblx0Y29uc29sZS5sb2cgYmFsbHNcclxuXHJcbmNyZWF0ZUNvbG9ycyA9IC0+XHJcblx0cmVzdWx0ID0gW11cclxuXHQjdmFsdWVzID0gJzBmJyAjIDg9MioyKjJcclxuXHR2YWx1ZXMgPSAnMDhmJyAjIDI3PTMqMyozXHJcblx0I3ZhbHVlcyA9ICcwNWFmJyAjIDY0PTQqNCo0XHJcblx0Zm9yIHIgaW4gdmFsdWVzXHJcblx0XHRmb3IgZyBpbiB2YWx1ZXNcclxuXHRcdFx0Zm9yIGIgaW4gdmFsdWVzXHJcblx0XHRcdFx0cmVzdWx0LnB1c2ggJyMnK3IrZytiICMrJzgnXHJcblx0cmVzdWx0XHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIHdpbmRvd1dpZHRoLHdpbmRvd0hlaWdodFxyXG5cdENPTE9SUyA9IGNyZWF0ZUNvbG9ycygpXHJcblx0cmVzZXQgMVxyXG5cclxuZHJhdyA9IC0+XHJcblx0YmcgMC41XHJcblx0Zm9yIGJhbGwgaW4gYmFsbHNcclxuXHRcdGJhbGwucml0YSgpXHJcblx0c3cgMFxyXG5cdGZjIDFcclxuXHR0ZXh0U2l6ZSAxNlxyXG5cdHRleHQgXCJsZXZlbCAje2xldmVsfVwiLCAxMDAsMjVcclxuXHR0ZXh0IFwiYWN0aXZlICN7YWN0aXZlfVwiLCAxMDAsNTBcclxuXHRmb3IgYmFsbCxpIGluIGJhbGxzXHJcblx0XHR0ZXh0IFwiI3tiYWxsLnh9ICN7YmFsbC55fSAje2JhbGwuY29sfSAje2JhbGwuYWN0aXZlfVwiLDEwMCw3NStpKjI1XHJcblxyXG5tb3VzZVByZXNzZWQgPSAtPlxyXG5cdGNhbmRpZGF0ZXMgPSAoYmFsbCBmb3IgYmFsbCBpbiBiYWxscyB3aGVuIGJhbGwuaW5zaWRlIG1vdXNlWCxtb3VzZVkpXHJcblx0aWYgY2FuZGlkYXRlcy5sZW5ndGggIT0gMSBcclxuXHRcdHJlc2V0IC0xXHJcblx0XHRyZXR1cm5cclxuXHRhY3RpdmUtLVxyXG5cdGJhbGwgPSBjYW5kaWRhdGVzWzBdXHJcblx0YmFsbC5hY3RpdmUgPSBmYWxzZVxyXG5cdGNsaWNrZWQucHVzaCBiYWxsXHJcblx0Y29uc29sZS5sb2cgXCJjbGlja2VkLmxlbmd0aCAje2NsaWNrZWQubGVuZ3RofVwiXHJcblx0aWYgY2xpY2tlZC5sZW5ndGggPT0gMlxyXG5cdFx0aWYgYWN0aXZlID09IDBcclxuXHRcdFx0cmVzZXQgMVxyXG5cdFx0XHRyZXR1cm5cclxuXHRcdGlmIGNsaWNrZWRbMF0uY29sICE9IGNsaWNrZWRbMV0uY29sXHJcblx0XHRcdHJlc2V0IC0xXHJcblx0XHRjbGlja2VkID0gW11cclxuXHJcbm92ZXJsYXAgPSAoeCx5KSAtPlxyXG5cdGZvciBiYWxsIGluIGJhbGxzIFxyXG5cdFx0aWYgZGlzdChiYWxsLngsYmFsbC55LHgseSkgPCBiYWxsLnJhZGllIHRoZW4gcmV0dXJuIHRydWVcclxuXHRmYWxzZVxyXG5cclxuY3JlYXRlUGFpciA9IChjb2wpIC0+XHJcblx0cmFkaWUgPSBpbnQgd2luZG93V2lkdGgvKDMrbGV2ZWwpXHJcblxyXG5cdGZvciBqIGluIHJhbmdlIDJcclxuXHRcdGFjdGl2ZSsrXHJcblx0XHR4ID0gaW50IHJhbmRvbSB3aWR0aFxyXG5cdFx0eSA9IGludCByYW5kb20gaGVpZ2h0XHJcblx0XHR3aGlsZSBvdmVybGFwIHgseVxyXG5cdFx0XHR4ID0gaW50IHJhbmRvbSB3aWR0aFxyXG5cdFx0XHR5ID0gaW50IHJhbmRvbSBoZWlnaHRcclxuXHRcdGJhbGxzLnB1c2ggbmV3IEJhbGwgcmFkaWUseCx5LGNvbCJdfQ==
//# sourceURL=c:\github\ColorPairCD\coffee\sketch.coffee