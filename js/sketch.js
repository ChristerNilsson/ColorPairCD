// Generated by CoffeeScript 2.4.1
var COLORS, active, balls, clicked, createCOLORS, createPair, draw, level, mousePressed, newBall, overlap, radie, range, reset, setup;

COLORS = null;

level = 0;

active = 0;

balls = [];

clicked = [];

radie = 0;

range = _.range;

newBall = function(x, y, rgb) {
  return {
    x: x,
    y: y,
    rgb: rgb,
    active: true,
    rita: function() {
      if (!this.active) {
        return;
      }
      stroke('#000');
      strokeWeight(4);
      fill(this.rgb);
      return ellipse(this.x, this.y, 2 * radie);
    },
    inside: function(mx, my) {
      if (!this.active) {
        return false;
      }
      return radie > dist(this.x, this.y, mx, my);
    }
  };
};

reset = function(delta = 1) {
  var i, k, len, ref, results;
  COLORS = _.shuffle(COLORS);
  active = 0;
  balls = [];
  clicked = [];
  level += delta;
  if (level < 1) {
    level = 1;
  }
  ref = range(level);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push(createPair(COLORS[i]));
  }
  return results;
};

createCOLORS = function(pattern) {
  var b, g, k, l, len, len1, len2, m, r, result;
  // _.flatten ('#'+r+g+b+'8' for r in pattern for g in pattern for b in pattern)
  result = [];
  for (k = 0, len = pattern.length; k < len; k++) {
    r = pattern[k];
    for (l = 0, len1 = pattern.length; l < len1; l++) {
      g = pattern[l];
      for (m = 0, len2 = pattern.length; m < len2; m++) {
        b = pattern[m];
        result.push('#' + r + g + b + '8');
      }
    }
  }
  return result;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  COLORS = createCOLORS('05af'); // 0f 08f 05af 58be 68ac
  textSize(100);
  textAlign(CENTER, CENTER);
  return reset(1);
};

draw = function() {
  var ball, k, len;
  background('#fff');
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    ball.rita();
  }
  fill('#000');
  return text(level, width / 2, height / 2);
};

mousePressed = function() {
  var ball, candidates;
  candidates = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = balls.length; k < len; k++) {
      ball = balls[k];
      if (ball.inside(mouseX, mouseY)) {
        results.push(ball);
      }
    }
    return results;
  })();
  if (candidates.length !== 1) {
    return reset(-1);
  }
  active--;
  ball = candidates[0];
  ball.active = false;
  clicked.push(ball);
  if (clicked.length === 2) {
    if (active === 0) {
      return reset(1);
    }
    if (clicked[0].rgb !== clicked[1].rgb) {
      reset(-1);
    }
    return clicked = [];
  }
};

overlap = function(x, y) {
  var ball, k, len;
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (0.5 * radie > dist(ball.x, ball.y, x, y)) {
      return true;
    }
  }
  return false;
};

createPair = function(rgb) {
  var j, k, len, ref, results, x, y;
  radie = int(1.5 * windowWidth / (3 + level));
  ref = range(2);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    active++;
    while (true) {
      x = int(random(width));
      y = int(random(height));
      if (!overlap(x, y)) {
        break;
      }
    }
    results.push(balls.push(newBall(x, y, rgb)));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLE1BQUEsRUFBQSxLQUFBLEVBQUEsT0FBQSxFQUFBLFlBQUEsRUFBQSxVQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFBQSxNQUFBLEdBQVM7O0FBQ1QsS0FBQSxHQUFROztBQUNSLE1BQUEsR0FBUzs7QUFDVCxLQUFBLEdBQVE7O0FBQ1IsT0FBQSxHQUFVOztBQUNWLEtBQUEsR0FBUTs7QUFFUixLQUFBLEdBQVEsQ0FBQyxDQUFDOztBQUVWLE9BQUEsR0FBVSxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxHQUFMLENBQUE7U0FDVDtJQUFBLENBQUEsRUFBSSxDQUFKO0lBQ0EsQ0FBQSxFQUFJLENBREo7SUFFQSxHQUFBLEVBQU0sR0FGTjtJQUdBLE1BQUEsRUFBUyxJQUhUO0lBSUEsSUFBQSxFQUFPLFFBQUEsQ0FBQSxDQUFBO01BQ04sSUFBRyxDQUFJLElBQUMsQ0FBQSxNQUFSO0FBQW9CLGVBQXBCOztNQUNBLE1BQUEsQ0FBTyxNQUFQO01BQ0EsWUFBQSxDQUFhLENBQWI7TUFDQSxJQUFBLENBQUssSUFBQyxDQUFBLEdBQU47YUFDQSxPQUFBLENBQVEsSUFBQyxDQUFBLENBQVQsRUFBVyxJQUFDLENBQUEsQ0FBWixFQUFjLENBQUEsR0FBRSxLQUFoQjtJQUxNLENBSlA7SUFVQSxNQUFBLEVBQVMsUUFBQSxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQUE7TUFDUixJQUFHLENBQUksSUFBQyxDQUFBLE1BQVI7QUFBb0IsZUFBTyxNQUEzQjs7YUFDQSxLQUFBLEdBQVEsSUFBQSxDQUFLLElBQUMsQ0FBQSxDQUFOLEVBQVEsSUFBQyxDQUFBLENBQVQs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QUE2QyxhQUFPLEtBQXBEOztFQUREO1NBRUE7QUFIUzs7QUFLVixVQUFBLEdBQWEsUUFBQSxDQUFDLEdBQUQsQ0FBQTtBQUNaLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUE7RUFBQSxLQUFBLEdBQVEsR0FBQSxDQUFJLEdBQUEsR0FBTSxXQUFOLEdBQWtCLENBQUMsQ0FBQSxHQUFFLEtBQUgsQ0FBdEI7QUFDUjtBQUFBO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxNQUFBO0FBQ0EsV0FBQSxJQUFBO01BQ0MsQ0FBQSxHQUFJLEdBQUEsQ0FBSSxNQUFBLENBQU8sS0FBUCxDQUFKO01BQ0osQ0FBQSxHQUFJLEdBQUEsQ0FBSSxNQUFBLENBQU8sTUFBUCxDQUFKO01BQ0osSUFBUyxDQUFJLE9BQUEsQ0FBUSxDQUFSLEVBQVUsQ0FBVixDQUFiO0FBQUEsY0FBQTs7SUFIRDtpQkFJQSxLQUFLLENBQUMsSUFBTixDQUFXLE9BQUEsQ0FBUSxDQUFSLEVBQVUsQ0FBVixFQUFZLEdBQVosQ0FBWDtFQU5ELENBQUE7O0FBRlkiLCJzb3VyY2VzQ29udGVudCI6WyJDT0xPUlMgPSBudWxsXHJcbmxldmVsID0gMFxyXG5hY3RpdmUgPSAwXHJcbmJhbGxzID0gW11cclxuY2xpY2tlZCA9IFtdXHJcbnJhZGllID0gMFxyXG5cclxucmFuZ2UgPSBfLnJhbmdlXHJcblxyXG5uZXdCYWxsID0gKHgseSxyZ2IpIC0+XHJcblx0eCA6IHhcclxuXHR5IDogeVxyXG5cdHJnYiA6IHJnYlxyXG5cdGFjdGl2ZSA6IHRydWVcclxuXHRyaXRhIDogLT5cclxuXHRcdGlmIG5vdCBAYWN0aXZlIHRoZW4gcmV0dXJuXHJcblx0XHRzdHJva2UgJyMwMDAnXHJcblx0XHRzdHJva2VXZWlnaHQgNFxyXG5cdFx0ZmlsbCBAcmdiXHJcblx0XHRlbGxpcHNlIEB4LEB5LDIqcmFkaWVcclxuXHRpbnNpZGUgOiAobXgsbXkpIC0+XHJcblx0XHRpZiBub3QgQGFjdGl2ZSB0aGVuIHJldHVybiBmYWxzZVxyXG5cdFx0cmFkaWUgPiBkaXN0IEB4LEB5LG14LG15XHJcblxyXG5yZXNldCA9IChkZWx0YSA9IDEpIC0+XHJcblx0Q09MT1JTID0gXy5zaHVmZmxlIENPTE9SU1xyXG5cdGFjdGl2ZSA9IDBcclxuXHRiYWxscyA9IFtdXHJcblx0Y2xpY2tlZCA9IFtdXHJcblx0bGV2ZWwgKz0gZGVsdGFcclxuXHRpZiBsZXZlbCA8IDEgdGhlbiBsZXZlbCA9IDFcclxuXHRmb3IgaSBpbiByYW5nZSBsZXZlbFxyXG5cdFx0Y3JlYXRlUGFpciBDT0xPUlNbaV1cclxuXHJcbmNyZWF0ZUNPTE9SUyA9IChwYXR0ZXJuKSAtPlxyXG5cdCMgXy5mbGF0dGVuICgnIycrcitnK2IrJzgnIGZvciByIGluIHBhdHRlcm4gZm9yIGcgaW4gcGF0dGVybiBmb3IgYiBpbiBwYXR0ZXJuKVxyXG5cdHJlc3VsdCA9IFtdXHJcblx0Zm9yIHIgaW4gcGF0dGVyblxyXG5cdFx0Zm9yIGcgaW4gcGF0dGVyblxyXG5cdFx0XHRmb3IgYiBpbiBwYXR0ZXJuXHJcblx0XHRcdFx0cmVzdWx0LnB1c2ggJyMnK3IrZytiKyc4J1xyXG5cdHJlc3VsdFxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyB3aW5kb3dXaWR0aCx3aW5kb3dIZWlnaHRcclxuXHRDT0xPUlMgPSBjcmVhdGVDT0xPUlMgJzA1YWYnICMgMGYgMDhmIDA1YWYgNThiZSA2OGFjXHJcblx0dGV4dFNpemUgMTAwXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRyZXNldCAxXHJcblxyXG5kcmF3ID0gLT5cclxuXHRiYWNrZ3JvdW5kICcjZmZmJ1xyXG5cdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRiYWxsLnJpdGEoKVxyXG5cdGZpbGwgJyMwMDAnXHJcblx0dGV4dCBsZXZlbCx3aWR0aC8yLGhlaWdodC8yXHJcblxyXG5tb3VzZVByZXNzZWQgPSAtPlxyXG5cdGNhbmRpZGF0ZXMgPSAoYmFsbCBmb3IgYmFsbCBpbiBiYWxscyB3aGVuIGJhbGwuaW5zaWRlIG1vdXNlWCxtb3VzZVkpXHJcblx0aWYgY2FuZGlkYXRlcy5sZW5ndGggIT0gMSB0aGVuIHJldHVybiByZXNldCAtMVxyXG5cdGFjdGl2ZS0tXHJcblx0YmFsbCA9IGNhbmRpZGF0ZXNbMF1cclxuXHRiYWxsLmFjdGl2ZSA9IGZhbHNlXHJcblx0Y2xpY2tlZC5wdXNoIGJhbGxcclxuXHRpZiBjbGlja2VkLmxlbmd0aCA9PSAyXHJcblx0XHRpZiBhY3RpdmUgPT0gMCB0aGVuIHJldHVybiByZXNldCAxXHJcblx0XHRpZiBjbGlja2VkWzBdLnJnYiAhPSBjbGlja2VkWzFdLnJnYiB0aGVuIHJlc2V0IC0xXHJcblx0XHRjbGlja2VkID0gW11cclxuXHJcbm92ZXJsYXAgPSAoeCx5KSAtPlxyXG5cdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRpZiAwLjUgKiByYWRpZSA+IGRpc3QgYmFsbC54LGJhbGwueSx4LHkgdGhlbiByZXR1cm4gdHJ1ZVxyXG5cdGZhbHNlXHJcblxyXG5jcmVhdGVQYWlyID0gKHJnYikgLT5cclxuXHRyYWRpZSA9IGludCAxLjUgKiB3aW5kb3dXaWR0aC8oMytsZXZlbClcclxuXHRmb3IgaiBpbiByYW5nZSAyXHJcblx0XHRhY3RpdmUrK1xyXG5cdFx0bG9vcFxyXG5cdFx0XHR4ID0gaW50IHJhbmRvbSB3aWR0aFxyXG5cdFx0XHR5ID0gaW50IHJhbmRvbSBoZWlnaHRcclxuXHRcdFx0YnJlYWsgaWYgbm90IG92ZXJsYXAgeCx5XHJcblx0XHRiYWxscy5wdXNoIG5ld0JhbGwgeCx5LHJnYiJdfQ==
//# sourceURL=c:\github\ColorPairCD\coffee\sketch.coffee