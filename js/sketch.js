// Generated by CoffeeScript 2.4.1
var Ball, COLORS, active, balls, clicked, createColors, createPair, draw, level, mousePressed, overlap, reset, setup;

COLORS = null;

level = 0;

active = 0;

clicked = [];

Ball = class Ball {
  constructor(radie1, x1, y1, col1) {
    this.radie = radie1;
    this.x = x1;
    this.y = y1;
    this.col = col1;
    this.active = true;
  }

  rita() {
    if (!this.active) {
      return;
    }
    fill(this.col);
    return circle(this.x, this.y, this.radie);
  }

  inside(mx, my) {
    if (!this.active) {
      return false;
    }
    return dist(this.x, this.y, mx, my) < this.radie;
  }

};

balls = [];

reset = function(delta = 1) {
  var i, k, len, ref;
  active = 0;
  balls = [];
  clicked = [];
  level += delta;
  console.log('reset', level);
  if (level < 1) {
    level = 1;
  }
  ref = range(level);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    createPair(COLORS[i]);
  }
  return console.log(balls);
};

createColors = function() {
  var b, g, k, l, len, len1, len2, m, r, result, values;
  result = [];
  values = '08f'; // 27=3*3*3
//values = '05af' # 64=4*4*4
  for (k = 0, len = values.length; k < len; k++) {
    r = values[k];
    for (l = 0, len1 = values.length; l < len1; l++) {
      g = values[l];
      for (m = 0, len2 = values.length; m < len2; m++) {
        b = values[m];
        result.push('#' + r + g + b + '8');
      }
    }
  }
  return result;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  COLORS = createColors();
  return reset(1);
};

draw = function() {
  var ball, i, k, l, len, len1, results;
  bg(0.5);
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    ball.rita();
  }
  fc(1);
  textSize(16);
  text(`level ${level}`, 100, 25);
  text(`active ${active}`, 100, 50);
  results = [];
  for (i = l = 0, len1 = balls.length; l < len1; i = ++l) {
    ball = balls[i];
    results.push(text(`${ball.x} ${ball.y} ${ball.col} ${ball.active}`, 100, 75 + i * 25));
  }
  return results;
};

mousePressed = function() {
  var ball, candidates;
  candidates = (function() {
    var k, len, results;
    results = [];
    for (k = 0, len = balls.length; k < len; k++) {
      ball = balls[k];
      if (ball.inside(mouseX, mouseY)) {
        results.push(ball);
      }
    }
    return results;
  })();
  if (candidates.length !== 1) {
    reset(-1);
    return;
  }
  active--;
  ball = candidates[0];
  ball.active = false;
  clicked.push(ball);
  console.log(`clicked.length ${clicked.length}`);
  if (clicked.length === 2) {
    if (active === 0) {
      reset(1);
      return;
    }
    if (clicked[0].col !== clicked[1].col) {
      reset(-1);
    }
    return clicked = [];
  }
};

overlap = function(x, y) {
  var ball, k, len;
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (dist(ball.x, ball.y, x, y) < ball.radie) {
      return true;
    }
  }
  return false;
};

createPair = function(col) {
  var j, k, len, radie, ref, results, x, y;
  radie = int(windowWidth / (3 + level));
  ref = range(2);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    active++;
    x = int(random(width));
    y = int(random(height));
    while (overlap(x, y)) {
      x = int(random(width));
      y = int(random(height));
    }
    results.push(balls.push(new Ball(radie, x, y, col)));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLE9BQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsWUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsTUFBQSxHQUFTOztBQUNULEtBQUEsR0FBUTs7QUFDUixNQUFBLEdBQVM7O0FBQ1QsT0FBQSxHQUFVOztBQUVKLE9BQU4sTUFBQSxLQUFBO0VBQ0MsV0FBYyxPQUFBLElBQUEsSUFBQSxNQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBTyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFDL0IsSUFBQyxDQUFBLE1BQUQsR0FBVTtFQURHOztFQUVkLElBQU8sQ0FBQSxDQUFBO0lBQ04sSUFBRyxDQUFJLElBQUMsQ0FBQSxNQUFSO0FBQW9CLGFBQXBCOztJQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsR0FBTjtXQUNBLE1BQUEsQ0FBTyxJQUFDLENBQUEsQ0FBUixFQUFVLElBQUMsQ0FBQSxDQUFYLEVBQWEsSUFBQyxDQUFBLEtBQWQ7RUFITTs7RUFJUCxNQUFTLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBQTtJQUNSLElBQUcsQ0FBSSxJQUFDLENBQUEsTUFBUjtBQUFvQixhQUFPLE1BQTNCOztXQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsQ0FBTixFQUFRLElBQUMsQ0FBQSxDQUFULEVBQVcsRUFBWCxFQUFjLEVBQWQsQ0FBQSxHQUFvQixJQUFDLENBQUE7RUFGYjs7QUFQVjs7QUFXQSxLQUFBLEdBQVE7O0FBRVIsS0FBQSxHQUFRLFFBQUEsQ0FBQyxRQUFRLENBQVQsQ0FBQTtBQUNQLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVB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bFxyXG5sZXZlbCA9IDBcclxuYWN0aXZlID0gMFxyXG5jbGlja2VkID0gW11cclxuXHJcbmNsYXNzIEJhbGxcclxuXHRjb25zdHJ1Y3RvciA6IChAcmFkaWUsIEB4LCBAeSwgQGNvbCkgLT5cclxuXHRcdEBhY3RpdmUgPSB0cnVlXHJcblx0cml0YSA6IC0+XHJcblx0XHRpZiBub3QgQGFjdGl2ZSB0aGVuIHJldHVybiBcclxuXHRcdGZpbGwgQGNvbFxyXG5cdFx0Y2lyY2xlIEB4LEB5LEByYWRpZVxyXG5cdGluc2lkZSA6IChteCxteSkgLT4gXHJcblx0XHRpZiBub3QgQGFjdGl2ZSB0aGVuIHJldHVybiBmYWxzZVxyXG5cdFx0ZGlzdChAeCxAeSxteCxteSkgPCBAcmFkaWVcclxuXHJcbmJhbGxzID0gW11cclxuXHJcbnJlc2V0ID0gKGRlbHRhID0gMSkgLT5cclxuXHRhY3RpdmUgPSAwIFxyXG5cdGJhbGxzID0gW11cclxuXHRjbGlja2VkID0gW11cclxuXHRsZXZlbCArPSBkZWx0YVxyXG5cdGNvbnNvbGUubG9nICdyZXNldCcsbGV2ZWxcclxuXHRpZiBsZXZlbCA8IDEgdGhlbiBsZXZlbCA9IDFcclxuXHRmb3IgaSBpbiByYW5nZSBsZXZlbFxyXG5cdFx0Y3JlYXRlUGFpciBDT0xPUlNbaV1cclxuXHRjb25zb2xlLmxvZyBiYWxsc1xyXG5cclxuY3JlYXRlQ29sb3JzID0gLT5cclxuXHRyZXN1bHQgPSBbXVxyXG5cdHZhbHVlcyA9ICcwOGYnICMgMjc9MyozKjNcclxuXHQjdmFsdWVzID0gJzA1YWYnICMgNjQ9NCo0KjRcclxuXHRmb3IgciBpbiB2YWx1ZXNcclxuXHRcdGZvciBnIGluIHZhbHVlc1xyXG5cdFx0XHRmb3IgYiBpbiB2YWx1ZXNcclxuXHRcdFx0XHRyZXN1bHQucHVzaCAnIycrcitnK2IrJzgnXHJcblx0cmVzdWx0XHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIHdpbmRvd1dpZHRoLHdpbmRvd0hlaWdodFxyXG5cdENPTE9SUyA9IGNyZWF0ZUNvbG9ycygpXHJcblx0cmVzZXQgMVxyXG5cclxuZHJhdyA9IC0+XHJcblx0YmcgMC41XHJcblx0Zm9yIGJhbGwgaW4gYmFsbHNcclxuXHRcdGJhbGwucml0YSgpXHJcblx0ZmMgMVxyXG5cdHRleHRTaXplIDE2XHJcblx0dGV4dCBcImxldmVsICN7bGV2ZWx9XCIsIDEwMCwyNVxyXG5cdHRleHQgXCJhY3RpdmUgI3thY3RpdmV9XCIsIDEwMCw1MFxyXG5cdGZvciBiYWxsLGkgaW4gYmFsbHNcclxuXHRcdHRleHQgXCIje2JhbGwueH0gI3tiYWxsLnl9ICN7YmFsbC5jb2x9ICN7YmFsbC5hY3RpdmV9XCIsMTAwLDc1K2kqMjVcclxuXHJcbm1vdXNlUHJlc3NlZCA9IC0+XHJcblx0Y2FuZGlkYXRlcyA9IChiYWxsIGZvciBiYWxsIGluIGJhbGxzIHdoZW4gYmFsbC5pbnNpZGUgbW91c2VYLG1vdXNlWSlcclxuXHRpZiBjYW5kaWRhdGVzLmxlbmd0aCAhPSAxIFxyXG5cdFx0cmVzZXQgLTFcclxuXHRcdHJldHVyblxyXG5cdGFjdGl2ZS0tXHJcblx0YmFsbCA9IGNhbmRpZGF0ZXNbMF1cclxuXHRiYWxsLmFjdGl2ZSA9IGZhbHNlXHJcblx0Y2xpY2tlZC5wdXNoIGJhbGxcclxuXHRjb25zb2xlLmxvZyBcImNsaWNrZWQubGVuZ3RoICN7Y2xpY2tlZC5sZW5ndGh9XCJcclxuXHRpZiBjbGlja2VkLmxlbmd0aCA9PSAyXHJcblx0XHRpZiBhY3RpdmUgPT0gMFxyXG5cdFx0XHRyZXNldCAxXHJcblx0XHRcdHJldHVyblxyXG5cdFx0aWYgY2xpY2tlZFswXS5jb2wgIT0gY2xpY2tlZFsxXS5jb2xcclxuXHRcdFx0cmVzZXQgLTFcclxuXHRcdGNsaWNrZWQgPSBbXVxyXG5cclxub3ZlcmxhcCA9ICh4LHkpIC0+XHJcblx0Zm9yIGJhbGwgaW4gYmFsbHMgXHJcblx0XHRpZiBkaXN0KGJhbGwueCxiYWxsLnkseCx5KSA8IGJhbGwucmFkaWUgdGhlbiByZXR1cm4gdHJ1ZVxyXG5cdGZhbHNlXHJcblxyXG5jcmVhdGVQYWlyID0gKGNvbCkgLT5cclxuXHRyYWRpZSA9IGludCB3aW5kb3dXaWR0aC8oMytsZXZlbClcclxuXHJcblx0Zm9yIGogaW4gcmFuZ2UgMlxyXG5cdFx0YWN0aXZlKytcclxuXHRcdHggPSBpbnQgcmFuZG9tIHdpZHRoXHJcblx0XHR5ID0gaW50IHJhbmRvbSBoZWlnaHRcclxuXHRcdHdoaWxlIG92ZXJsYXAgeCx5XHJcblx0XHRcdHggPSBpbnQgcmFuZG9tIHdpZHRoXHJcblx0XHRcdHkgPSBpbnQgcmFuZG9tIGhlaWdodFxyXG5cdFx0YmFsbHMucHVzaCBuZXcgQmFsbCByYWRpZSx4LHksY29sIl19
//# sourceURL=c:\github\ColorPairCD\coffee\sketch.coffee