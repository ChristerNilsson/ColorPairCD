// Generated by CoffeeScript 2.4.1
var COLORS, active, balls, clicked, draw, level, mousePressed, radie, range, reset, setup;

balls = [];

radie = 100;

range = _.range;

COLORS = "#f008 #00f8 #0f08 #ff08".split(" ");

clicked = [];

level = 0;

active = 0;

reset = function(delta) {
  var i, j, len, ref, x, y;
  level += delta;
  if (level === 0) {
    level = 1;
  }
  balls = [];
  clicked = [];
  ref = range(level);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    x = int(random(width));
    y = int(random(height));
    balls.push({
      x: x,
      y: y,
      rgb: COLORS[i],
      active: true
    });
    x = int(random(width));
    y = int(random(height));
    balls.push({
      x: x,
      y: y,
      rgb: COLORS[i],
      active: true
    });
  }
  return active = balls.length;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  radie = windowHeight / 4;
  return reset(1);
};

draw = function() {
  var ball, j, len, results;
  background(255);
  results = [];
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    if (ball.active) {
      fill(ball.rgb);
      ellipse(ball.x, ball.y, radie * 2);
      fill(0);
      textSize(radie / 5);
      textAlign(CENTER, CENTER);
      results.push(text(`${ball.x} ${ball.y}\n${ball.rgb}\n${ball.active}`, ball.x, ball.y));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

mousePressed = function() {
  var b, ball, ballClicked, j, len;
  ballClicked = 0;
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    if (ball.active && radie > dist(ball.x, ball.y, mouseX, mouseY)) {
      ballClicked++;
      b = ball;
    }
  }
  if (ballClicked !== 1) {
    return reset(-1);
  }
  active--;
  b.active = false;
  clicked.push(b);
  if (clicked.length !== 2) {
    return;
  }
  if (clicked[0].rgb !== clicked[1].rgb) {
    return reset(-1);
  }
  if (active === 0) {
    return reset(1);
  }
  return clicked = [];
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoMi5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxza2V0Y2gyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxNQUFBLEVBQUEsTUFBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsS0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUTs7QUFDUixLQUFBLEdBQVEsQ0FBQyxDQUFDOztBQUNWLE1BQUEsR0FBUyx5QkFBeUIsQ0FBQyxLQUExQixDQUFnQyxHQUFoQzs7QUFDVCxPQUFBLEdBQVU7O0FBQ1YsS0FBQSxHQUFROztBQUNSLE1BQUEsR0FBUzs7QUFFVCxLQUFBLEdBQVEsUUFBQSxDQUFDLEtBQUQsQ0FBQTtBQUNQLE1BQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQTtFQUFBLEtBQUEsSUFBUztFQUNULElBQUcsS0FBQSxLQUFTLENBQVo7SUFBbUIsS0FBQSxHQUFRLEVBQTNCOztFQUNBLEtBQUEsR0FBUTtFQUNSLE9BQUEsR0FBVTtBQUNWO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxDQUFBLEdBQUksR0FBQSxDQUFJLE1BQUEsQ0FBTyxLQUFQLENBQUo7SUFDSixDQUFBLEdBQUksR0FBQSxDQUFJLE1BQUEsQ0FBTyxNQUFQLENBQUo7SUFDSixLQUFLLENBQUMsSUFBTixDQUFXO01BQUMsQ0FBQSxFQUFFLENBQUg7TUFBTSxDQUFBLEVBQUUsQ0FBUjtNQUFXLEdBQUEsRUFBSSxNQUFPLENBQUEsQ0FBQSxDQUF0QjtNQUEwQixNQUFBLEVBQU87SUFBakMsQ0FBWDtJQUNBLENBQUEsR0FBSSxHQUFBLENBQUksTUFBQSxDQUFPLEtBQVAsQ0FBSjtJQUNKLENBQUEsR0FBSSxHQUFBLENBQUksTUFBQSxDQUFPLE1BQVAsQ0FBSjtJQUNKLEtBQUssQ0FBQyxJQUFOLENBQVc7TUFBQyxDQUFBLEVBQUUsQ0FBSDtNQUFNLENBQUEsRUFBRSxDQUFSO01BQVcsR0FBQSxFQUFJLE1BQU8sQ0FBQSxDQUFBLENBQXRCO01BQTBCLE1BQUEsRUFBTztJQUFqQyxDQUFYO0VBTkQ7U0FPQSxNQUFBLEdBQVMsS0FBSyxDQUFDO0FBWlI7O0FBY1IsS0FBQSxHQUFRLFFBQUEsQ0FBQSxDQUFBO0VBQ1AsWUFBQSxDQUFhLFdBQWIsRUFBMEIsWUFBMUI7RUFDQSxLQUFBLEdBQVEsWUFBQSxHQUFhO1NBQ3JCLEtBQUEsQ0FBTSxDQUFOO0FBSE87O0FBS1IsSUFBQSxHQUFPLFFBQUEsQ0FBQSxDQUFBO0FBQ04sTUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQTtFQUFBLFVBQUEsQ0FBVyxHQUFYO0FBQ0E7RUFBQSxLQUFBLHVDQUFBOztJQUNDLElBQUcsSUFBSSxDQUFDLE1BQVI7TUFDQyxJQUFBLENBQUssSUFBSSxDQUFDLEdBQVY7TUFDQSxPQUFBLENBQVEsSUFBSSxDQUFDLENBQWIsRUFBZSxJQUFJLENBQUMsQ0FBcEIsRUFBc0IsS0FBQSxHQUFNLENBQTVCO01BQ0EsSUFBQSxDQUFLLENBQUw7TUFDQSxRQUFBLENBQVMsS0FBQSxHQUFNLENBQWY7TUFDQSxTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjttQkFDQSxJQUFBLENBQUssQ0FBQSxDQUFBLENBQUcsSUFBSSxDQUFDLENBQVIsRUFBQSxDQUFBLENBQWEsSUFBSSxDQUFDLENBQWxCLENBQW9CLEVBQXBCLENBQUEsQ0FBd0IsSUFBSSxDQUFDLEdBQTdCLENBQWlDLEVBQWpDLENBQUEsQ0FBcUMsSUFBSSxDQUFDLE1BQTFDLENBQUEsQ0FBTCxFQUF3RCxJQUFJLENBQUMsQ0FBN0QsRUFBK0QsSUFBSSxDQUFDLENBQXBFLEdBTkQ7S0FBQSxNQUFBOzJCQUFBOztFQURELENBQUE7O0FBRk07O0FBV1AsWUFBQSxHQUFlLFFBQUEsQ0FBQSxDQUFBO0FBQ2QsTUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLFdBQUEsRUFBQSxDQUFBLEVBQUE7RUFBQSxXQUFBLEdBQWM7RUFDZCxLQUFBLHVDQUFBOztJQUNDLElBQUcsSUFBSSxDQUFDLE1BQUwsSUFBZ0IsS0FBQSxHQUFRLElBQUEsQ0FBSyxJQUFJLENBQUMsQ0FBVixFQUFhLElBQUksQ0FBQyxDQUFsQixFQUFxQixNQUFyQixFQUE2QixNQUE3QixDQUEzQjtNQUNDLFdBQUE7TUFDQSxDQUFBLEdBQUksS0FGTDs7RUFERDtFQUtBLElBQUcsV0FBQSxLQUFlLENBQWxCO0FBQXlCLFdBQU8sS0FBQSxDQUFNLENBQUMsQ0FBUCxFQUFoQzs7RUFDQSxNQUFBO0VBQ0EsQ0FBQyxDQUFDLE1BQUYsR0FBVztFQUNYLE9BQU8sQ0FBQyxJQUFSLENBQWEsQ0FBYjtFQUNBLElBQUcsT0FBTyxDQUFDLE1BQVIsS0FBa0IsQ0FBckI7QUFBNEIsV0FBNUI7O0VBQ0EsSUFBRyxPQUFRLENBQUEsQ0FBQSxDQUFFLENBQUMsR0FBWCxLQUFrQixPQUFRLENBQUEsQ0FBQSxDQUFFLENBQUMsR0FBaEM7QUFBeUMsV0FBTyxLQUFBLENBQU0sQ0FBQyxDQUFQLEVBQWhEOztFQUNBLElBQUcsTUFBQSxLQUFVLENBQWI7QUFBb0IsV0FBTyxLQUFBLENBQU0sQ0FBTixFQUEzQjs7U0FDQSxPQUFBLEdBQVU7QUFkSSIsInNvdXJjZXNDb250ZW50IjpbImJhbGxzID0gW11cclxucmFkaWUgPSAxMDBcclxucmFuZ2UgPSBfLnJhbmdlXHJcbkNPTE9SUyA9IFwiI2YwMDggIzAwZjggIzBmMDggI2ZmMDhcIi5zcGxpdCBcIiBcIiBcclxuY2xpY2tlZCA9IFtdXHJcbmxldmVsID0gMFxyXG5hY3RpdmUgPSAwXHJcblxyXG5yZXNldCA9IChkZWx0YSktPlxyXG5cdGxldmVsICs9IGRlbHRhXHJcblx0aWYgbGV2ZWwgPT0gMCB0aGVuIGxldmVsID0gMVxyXG5cdGJhbGxzID0gW11cclxuXHRjbGlja2VkID0gW11cclxuXHRmb3IgaSBpbiByYW5nZSBsZXZlbFxyXG5cdFx0eCA9IGludCByYW5kb20gd2lkdGhcclxuXHRcdHkgPSBpbnQgcmFuZG9tIGhlaWdodFxyXG5cdFx0YmFsbHMucHVzaCB7eDp4LCB5OnksIHJnYjpDT0xPUlNbaV0sIGFjdGl2ZTp0cnVlfVxyXG5cdFx0eCA9IGludCByYW5kb20gd2lkdGhcclxuXHRcdHkgPSBpbnQgcmFuZG9tIGhlaWdodFxyXG5cdFx0YmFsbHMucHVzaCB7eDp4LCB5OnksIHJnYjpDT0xPUlNbaV0sIGFjdGl2ZTp0cnVlfVxyXG5cdGFjdGl2ZSA9IGJhbGxzLmxlbmd0aFxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyB3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0XHJcblx0cmFkaWUgPSB3aW5kb3dIZWlnaHQvNFxyXG5cdHJlc2V0IDFcclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgMjU1XHJcblx0Zm9yIGJhbGwgaW4gYmFsbHNcclxuXHRcdGlmIGJhbGwuYWN0aXZlXHJcblx0XHRcdGZpbGwgYmFsbC5yZ2JcclxuXHRcdFx0ZWxsaXBzZSBiYWxsLngsYmFsbC55LHJhZGllKjJcclxuXHRcdFx0ZmlsbCAwXHJcblx0XHRcdHRleHRTaXplIHJhZGllLzVcclxuXHRcdFx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRcdFx0dGV4dCBcIiN7YmFsbC54fSAje2JhbGwueX1cXG4je2JhbGwucmdifVxcbiN7YmFsbC5hY3RpdmV9XCIsYmFsbC54LGJhbGwueVxyXG5cclxubW91c2VQcmVzc2VkID0gLT5cclxuXHRiYWxsQ2xpY2tlZCA9IDBcclxuXHRmb3IgYmFsbCBpbiBiYWxsc1xyXG5cdFx0aWYgYmFsbC5hY3RpdmUgYW5kIHJhZGllID4gZGlzdCBiYWxsLngsIGJhbGwueSwgbW91c2VYLCBtb3VzZVlcclxuXHRcdFx0YmFsbENsaWNrZWQrK1xyXG5cdFx0XHRiID0gYmFsbFxyXG5cclxuXHRpZiBiYWxsQ2xpY2tlZCAhPSAxIHRoZW4gcmV0dXJuIHJlc2V0IC0xXHJcblx0YWN0aXZlLS1cclxuXHRiLmFjdGl2ZSA9IGZhbHNlXHJcblx0Y2xpY2tlZC5wdXNoIGJcclxuXHRpZiBjbGlja2VkLmxlbmd0aCAhPSAyIHRoZW4gcmV0dXJuXHJcblx0aWYgY2xpY2tlZFswXS5yZ2IgIT0gY2xpY2tlZFsxXS5yZ2IgdGhlbiByZXR1cm4gcmVzZXQgLTFcclxuXHRpZiBhY3RpdmUgPT0gMCB0aGVuIHJldHVybiByZXNldCAxXHJcblx0Y2xpY2tlZCA9IFtdXHJcbiJdfQ==
//# sourceURL=c:\github\ColorPairCD\coffee\sketch2.coffee